Create a branch called greeting and switch to it
Edit the greeting.txt to contain your favorite greeting
Add greeting.txt files to the staging area
Commit
Switch back to the master branch
Create a file README.md with information about this repository
Add the README.md file to staging area and make the commit
What is the output of git log --oneline --graph --all?
Diff the branches
Merge the greeting branch into master
What is the output of git log --oneline --graph --all now? Observe the extra merge commit created with the message "Merge branch 'greeting'".


Explore the repo and the history so you know what happened
Use git rebase --interactive v0.0 to let you edit the "recipe" for the entire feature development.
Clean up the history such that it actually makes sense. Try to use as many of the rebase "features" (e.g. reword, squash, fixup, drop) as possible. You decide yourself if you want to rewrite the whole thing in one go, or apply a few changes first, then run a new git rebase --interactive v0.0 to keep cleaning.


ls -l # list files
tail -n +1 * # show content of all files
git log --oneline # show history
git log --stat # log which files changed
git log --patch # log with diff
git rebase -i <ref> # run the interactive rebase back to